% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_col.R
\name{get_col}
\alias{get_col}
\alias{as.col}
\alias{as.col.col}
\alias{as.col.character}
\alias{as.col.list}
\alias{as.col.data.frame}
\alias{as.data.frame.col}
\alias{get_col_}
\title{Get IDs from the Catalogue of Life}
\usage{
get_col(
  sci,
  ask = TRUE,
  messages = TRUE,
  rows = NA,
  status = "accepted",
  minRank = NULL,
  maxRank = NULL,
  fuzzy = FALSE,
  match_type = "whole_words",
  ...
)

as.col(x, check = FALSE)

\method{as.col}{col}(x, check = FALSE)

\method{as.col}{character}(x, check = TRUE)

\method{as.col}{list}(x, check = TRUE)

\method{as.col}{data.frame}(x, check = TRUE)

\method{as.data.frame}{col}(x, ...)

get_col_(sci, messages = TRUE, limit = 1000)
}
\arguments{
\item{sci}{(character) one or more scientific names. Or, a \code{taxon_state}
object (see \link{taxon-state})}

\item{ask}{logical; should get_col be run in interactive mode?
If TRUE and more than one ID is found for the species, the user is
asked for input. If \code{FALSE} NA is returned for multiple matches.}

\item{messages}{logical; If TRUE the actual taxon queried is printed on the
console.}

\item{rows}{numeric; Any number from 1 to infinity. If the default NA, all
rows are considered. Note that this function still only gives back a col
class object with one to many identifiers. See \code{get_col_()} to get back all,
or a subset, of the raw data that you are presented during the ask process.}

\item{status}{(character) filter by taxonomic status. one of: accepted,
doubtful, ambiguous synonym}

\item{minRank, maxRank}{(character) filter by rank. See \code{\link[rcol:cp_nu_search]{rcol::cp_nu_search()}}
for options}

\item{fuzzy}{(logical) \code{TRUE} or \code{FALSE}. default: \code{NULL}}

\item{...}{Ignored}

\item{x}{Input to \code{\link[=as.col]{as.col()}}}

\item{check}{logical; Check if ID matches any existing on the DB, only used
in \code{as.col()}}

\item{limit}{(numeric) number of records to return, applies to \code{get_col_}
only}
}
\value{
A vector of taxonomic identifiers as an S3 class.
If a taxon is not found an \code{NA} is given. If more than one identifier
is found the function asks for user input if \code{ask = TRUE}, otherwise
returns \code{NA}. If \code{ask=FALSE} and \code{rows} does not equal
\code{NA}, then a data.frame is given back, but not of the uid class, which
you can't pass on to other functions as you normally can.

See \code{\link{get_id_details}} for further details including
attributes and exceptions
}
\description{
Get IDs from the Catalogue of Life
}
\details{
Internally we use \code{\link[rcol:cp_nu_search]{rcol::cp_nu_search()}}
}
\examples{
\dontrun{
get_col(sci='Poa annua')
get_col(sci='Pinus contorta')
get_col(sci='Puma concolor')

#lots of queries
spp <- names_list("species", 10)
res <- get_col(spp)
res
xx <- taxon_last()
xx

# multiple names
get_col(c("Poa annua", "Pinus contorta"))

# specify rows to limit choices available
get_col(sci='Satyrium', status = NULL)
get_col(sci='Satyrium', status = NULL, rows=10)
get_col(sci='Satyrium', status = NULL, rows=1:3)

# When not found, NA given
get_col(sci="uaudnadndj")
get_col(c("Chironomus riparius", "uaudnadndj"))

# Narrow down results to a division or rank, or both
## Satyrium example
### Results w/o narrowing
get_col("Satyrium")
### w/ maxRank
get_col("Satyrium", maxRank = "subspecies")
get_col("Satyrium", maxRank = "species")

## min/max rank example
get_col("Poa", rank = "genus")
get_col("Poa", family = "Thripidae")

# Fuzzy filter
get_col("A*", fuzzy = FALSE)
get_col("Aba", fuzzy = TRUE, match_type = "whole_words")
get_col("Aba", fuzzy = TRUE, match_type = "prefix")
get_col("Aba", fuzzy = TRUE, match_type = "exact")
get_col("Aba", fuzzy = FALSE)
get_col("Aba", fuzzy = TRUE)

# Convert a uid without class information to a uid class
as.col(get_col("Poa annua")) # already a uid, returns the same
as.col(get_col(c("Poa annua","Puma concolor"))) # same
as.col(2704179) # numeric
as.col(c(2704179,2435099,3171445)) # numeric vector, length > 1
as.col("2704179") # character
as.col(c("2704179","2435099","3171445")) # character vector, length > 1
as.col(list("2704179","2435099","3171445")) # list, either numeric or character
## dont check, much faster
as.col("2704179", check=FALSE)
as.col(2704179, check=FALSE)
as.col(2704179, check=FALSE)
as.col(c("2704179","2435099","3171445"), check=FALSE)
as.col(list("2704179","2435099","3171445"), check=FALSE)

(out <- as.col(c(2704179,2435099,3171445)))
data.frame(out)
as.uid( data.frame(out) )

# Get all data back
get_col_("Puma concolor")
get_col_(c("Pinus", "uaudnadndj"))
get_col_(c("Pinus", "Puma"), rows=5)
get_col_(c("Pinus", "Puma"), rows=1:5)

# use curl options
invisible(get_col("Quercus douglasii", verbose = TRUE))
}
}
\seealso{
\code{\link[=classification]{classification()}}

Other taxonomic-ids: 
\code{\link{get_boldid}()},
\code{\link{get_eolid}()},
\code{\link{get_gbifid}()},
\code{\link{get_ids}()},
\code{\link{get_iucn}()},
\code{\link{get_natservid}()},
\code{\link{get_nbnid}()},
\code{\link{get_pow}()},
\code{\link{get_tolid}()},
\code{\link{get_tpsid}()},
\code{\link{get_tsn}()},
\code{\link{get_uid}()},
\code{\link{get_wiki}()},
\code{\link{get_wormsid}()}
}
\concept{taxonomic-ids}
