% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_uid.R
\name{get_ncbi}
\alias{get_ncbi}
\alias{get_uid}
\alias{as.ncbi}
\alias{as.ncbi.ncbi}
\alias{as.ncbi.character}
\alias{as.ncbi.list}
\alias{as.ncbi.numeric}
\alias{as.ncbi.data.frame}
\alias{get_ncbi_}
\alias{get_uid_}
\title{Get the UID codes from NCBI for taxonomic names.}
\usage{
get_ncbi(
  sci_com,
  ask = TRUE,
  messages = TRUE,
  rows = NA,
  modifier = NULL,
  rank_query = NULL,
  division_filter = NULL,
  rank_filter = NULL,
  key = NULL,
  sciname = NULL,
  ...
)

get_uid(...)

as.ncbi(x, check = TRUE)

\method{as.ncbi}{ncbi}(x, check = TRUE)

\method{as.ncbi}{character}(x, check = TRUE)

\method{as.ncbi}{list}(x, check = TRUE)

\method{as.ncbi}{numeric}(x, check = TRUE)

\method{as.ncbi}{data.frame}(x, check = TRUE)

get_ncbi_(sci_com, messages = TRUE, rows = NA, key = NULL, sciname = NULL, ...)

get_uid_(...)
}
\arguments{
\item{sci_com}{character; scientific or common name. Or, a \code{taxon_state}
object (see \link{taxon-state})}

\item{ask}{logical; should get_ncbi be run in interactive mode? If TRUE and
more than one TSN is found for the species, the user is asked for input. If
FALSE NA is returned for multiple matches.}

\item{messages}{logical; If \code{TRUE} (default) the actual taxon queried is
printed on the console.}

\item{rows}{numeric; Any number from 1 to infinity. If the default NA, all
rows are considered. Note that this function still only gives back a uid
class object with one to many identifiers. See \code{\link[=get_ncbi_]{get_ncbi_()}} to get back
all, or a subset, of the raw data that you are presented during the ask
process.}

\item{modifier}{(character) A modifier to the \code{sci_com} given. Options
include: Organism, Scientific Name, Common Name, All Names, Division,
Filter, Lineage, GC, MGC, Name Tokens, Next Level, PGC, Properties, Rank,
Subtree, Synonym, Text Word. These are not checked, so make sure they are
entered correctly, as is.}

\item{rank_query}{(character) A taxonomic rank name to modify the query sent
to NCBI. See \link{rank_ref} for possible options. Though note that
some data sources use atypical ranks, so inspect the data itself for
options. Optional. See \code{Querying} below.}

\item{division_filter}{(character) A division (aka phylum) name to filter
data after retrieved from NCBI. Optional. See \code{Filtering} below.}

\item{rank_filter}{(character) A taxonomic rank name to filter data after
retrieved from NCBI. See \link{rank_ref} for possible options.
Though note that some data sources use atypical ranks, so inspect the data
itself for options. Optional. See \code{Filtering} below.}

\item{key}{(character) NCBI Entrez API key. optional. See Details.}

\item{sciname}{Deprecated, see \code{sci_com}}

\item{...}{Ignored}

\item{x}{Input to \code{\link[=as.ncbi]{as.ncbi()}}}

\item{check}{logical; Check if ID matches any existing on the DB, only used
in \code{\link[=as.ncbi]{as.ncbi()}}}
}
\value{
A vector of taxonomic identifiers as an S3 class.
If a taxon is not found an \code{NA} is given. If more than one identifier
is found the function asks for user input if \code{ask = TRUE}, otherwise
returns \code{NA}. If \code{ask=FALSE} and \code{rows} does not equal
\code{NA}, then a data.frame is given back, but not of the uid class, which
you can't pass on to other functions as you normally can.

See \code{\link{get_id_details}} for further details including
attributes and exceptions
}
\description{
Retrieve the Unique Identifier (UID) of a taxon from NCBI taxonomy browser.
}
\section{Rate limits}{

In case you run into errors due to your rate limit being exceeded, see
\code{\link[=taxize_options]{taxize_options()}}, where you can set \code{ncbi_sleep}.
}

\section{Querying}{
 The parameter \code{rank_query} is used in the search sent
to NCBI, whereas \code{rank_filter} filters data after it comes back. The
parameter \code{modifier} adds modifiers to the name. For example,
\code{modifier="Organism"} adds that to the name, giving e.g.,
\code{Helianthus[Organism]}.
}

\section{Filtering}{
 The parameters \code{division_filter} and
\code{rank_filter} are not used in the search to the data provider, but are
used in filtering the data down to a subset that is closer to the target
you want. For all these parameters, you can use regex strings since we use
\code{\link[=grep]{grep()}} internally to match. Filtering narrows down to the set
that matches your query, and removes the rest.
}

\section{Beware}{
 NCBI does funny things sometimes. E.g., if you search on
Fringella morel, a slight misspelling of the genus name, and a non-existent
epithet, NCBI gives back a morel fungal species. In addition, NCBI doesn't
really do fuzzy searching very well, so if there is a slight mis-spelling
in your names, you likely won't get what you are expecting. The lesson:
clean your names before using this function. Other data sources are better
about fuzzy matching.
}

\section{Authentication}{

See \link{taxize-authentication} for help on authentication

Note that even though you can't pass in your key to \code{as.ncbi} functions,
we still use your Entrez API key if you have it saved as an R option
or environment variable.
}

\section{HTTP version}{

We hard code \code{http_version = 2L} to use HTTP/1.1 in HTTP requests to
the Entrez API. See \code{curl::curl_symbols('CURL_HTTP_VERSION')}
}

\examples{
\dontrun{
get_ncbi(c("Chironomus riparius", "Chaetopteryx"))
get_ncbi(c("Chironomus riparius", "aaa vva"))

# When not found
get_ncbi("howdy")
get_ncbi(c("Chironomus riparius", "howdy"))

# Narrow down results to a division or rank, or both
## By modifying the query
### w/ modifiers to the name
get_ncbi(sci_com = "Aratinga acuticauda", modifier = "Organism")
get_ncbi(sci_com = "bear", modifier = "Common Name")

### w/ rank query
get_ncbi(sci_com = "Pinus", rank_query = "genus")
get_ncbi(sci_com = "Pinus", rank_query = "subgenus")
### division query doesn't really work, for unknown reasons, so not available

## By filtering the result
## Echinacea example
### Results w/o narrowing
get_ncbi("Echinacea")
### w/ division
get_ncbi(sci_com = "Echinacea", division_filter = "eudicots")
get_ncbi(sci_com = "Echinacea", division_filter = "sea urchins")

## Satyrium example
### Results w/o narrowing
get_ncbi(sci_com = "Satyrium")
### w/ division
get_ncbi(sci_com = "Satyrium", division_filter = "monocots")
get_ncbi(sci_com = "Satyrium", division_filter = "butterflies")

## Rank example
get_ncbi(sci_com = "Pinus")
get_ncbi(sci_com = "Pinus", rank_filter = "genus")
get_ncbi(sci_com = "Pinus", rank_filter = "subgenus")

# specify rows to limit choices available
get_ncbi('Dugesia') # user prompt needed
get_ncbi('Dugesia', rows=1) # 2 choices, so returns only 1 row, so no choices
get_ncbi('Dugesia', ask = FALSE) # returns NA for multiple matches

# Go to a website with more info on the taxon
res <- get_ncbi("Chironomus riparius")
as.data.frame(res)$uri

# Convert a uid without class information to a ncbi class
as.ncbi(get_ncbi("Chironomus riparius")) # already ncbi class, returns same
as.ncbi(get_ncbi(c("Chironomus riparius","Pinus contorta"))) # same
as.ncbi(315567) # numeric
as.ncbi(c(315567,3339,9696)) # numeric vector, length > 1
as.ncbi("315567") # character
as.ncbi(c("315567","3339","9696")) # character vector, length > 1
as.ncbi(list("315567","3339","9696")) # list, either numeric or character
## dont check, much faster
as.ncbi("315567", check=FALSE)
as.ncbi(315567, check=FALSE)
as.ncbi(c("315567","3339","9696"), check=FALSE)
as.ncbi(list("315567","3339","9696"), check=FALSE)

(out <- as.ncbi(c(315567,3339,9696)))
data.frame(out)
as.ncbi( data.frame(out) )

# Get all data back
get_ncbi_("Puma concolor")
get_ncbi_("Dugesia")
get_ncbi_("Dugesia", rows=2)
get_ncbi_("Dugesia", rows=1:2)
get_ncbi_(c("asdfadfasd","Pinus contorta"))

# use curl options
get_ncbi("Quercus douglasii", verbose = TRUE)
}
}
\seealso{
\code{\link[=classification]{classification()}}

Other taxonomic-ids: 
\code{\link{get_bold}()},
\code{\link{get_eol}()},
\code{\link{get_gbif}()},
\code{\link{get_ids}()},
\code{\link{get_itis}()},
\code{\link{get_iucn}()},
\code{\link{get_natserv}()},
\code{\link{get_nbn}()},
\code{\link{get_pow}()},
\code{\link{get_tol}()},
\code{\link{get_tps}()},
\code{\link{get_wiki}()},
\code{\link{get_worms}()},
\code{\link{id-accessors}}
}
\author{
Eduard Szoecs, \email{eduardszoecs@gmail.com}
}
\concept{taxonomic-ids}
