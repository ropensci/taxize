% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_tpsid.R
\name{get_tps}
\alias{get_tps}
\alias{get_tpsid}
\alias{as_tps}
\alias{as_tps.tps}
\alias{as_tps.character}
\alias{as_tps.list}
\alias{as_tps.numeric}
\alias{as_tps.data.frame}
\alias{get_tps_}
\alias{get_tpsid_}
\title{Get the NameID codes from Tropicos for taxonomic names.}
\usage{
get_tps(
  sci,
  ask = TRUE,
  messages = TRUE,
  key = NULL,
  rows = NA,
  family = NULL,
  rank = NULL,
  sciname = NULL,
  ...
)

get_tpsid(...)

as_tps(x, check = TRUE)

\method{as_tps}{tps}(x, check = TRUE)

\method{as_tps}{character}(x, check = TRUE)

\method{as_tps}{list}(x, check = TRUE)

\method{as_tps}{numeric}(x, check = TRUE)

\method{as_tps}{data.frame}(x, check = TRUE)

get_tps_(sci, messages = TRUE, key = NULL, rows = NA, sciname = NULL, ...)

get_tpsid_(...)
}
\arguments{
\item{sci}{(character) One or more scientific name's as a vector or list. Or,
a \code{taxon_state} object (see \link{taxon-state})}

\item{ask}{logical; should get_tps be run in interactive mode?
If TRUE and more than one ID is found for the species, the user is asked for
input. If FALSE NA is returned for multiple matches.}

\item{messages}{logical; If TRUE the actual taxon queried is printed on the console.}

\item{key}{Your API key; see \link{taxize-authentication}}

\item{rows}{numeric; Any number from 1 to infinity. If the default NA, all rows are considered.
Note that this function still only gives back a tps class object with one to many identifiers.
See \code{\link[=get_tps_]{get_tps_()}} to get back all, or a subset, of the raw data that you are
presented during the ask process.}

\item{family}{(character) A family name. Optional. See \code{Filtering} below.}

\item{rank}{(character) A taxonomic rank name. See \link{rank_ref} for possible
options. Though note that some data sources use atypical ranks, so inspect the
data itself for options. Optional. See \code{Filtering} below.}

\item{sciname}{Deprecated, see \code{sci}}

\item{...}{Other arguments passed to \code{\link[=tp_search]{tp_search()}}.}

\item{x}{Input to \code{\link[=as_tps]{as_tps()}}}

\item{check}{logical; Check if ID matches any existing on the DB, only used in
\code{\link[=as_tps]{as_tps()}}}
}
\value{
A vector of taxonomic identifiers as an S3 class.
If a taxon is not found an \code{NA} is given. If more than one identifier
is found the function asks for user input if \code{ask = TRUE}, otherwise
returns \code{NA}. If \code{ask=FALSE} and \code{rows} does not equal
\code{NA}, then a data.frame is given back, but not of the uid class, which
you can't pass on to other functions as you normally can.

See \code{\link{get_id_details}} for further details including
attributes and exceptions
}
\description{
Get the NameID codes from Tropicos for taxonomic names.
}
\section{Filtering}{

The parameters \code{family} an\code{rank}nk are not used in the search to the data
provider, but are used in filtering the data down to a subset that is closer to the
target you want.  For all these parameters,
you can use regex strings since we use \code{\link[=grep]{grep()}} internally to match.
Filtering narrows down to the set that matches your query, and removes the rest.
}

\examples{
\dontrun{
get_tps(sci='Poa annua')
get_tps(sci='Pinus contorta')

get_tps(c("Poa annua", "Pinus contorta"))

# specify rows to limit choices available
get_tps('Poa ann')
get_tps('Poa ann', rows=1)
get_tps('Poa ann', rows=25)
get_tps('Poa ann', rows=1:2)

# When not found, NA given (howdy is not a species name, and Chrinomus is a fly)
get_tps("howdy")
get_tps(c("Chironomus riparius", "howdy"))

# Narrow down results to a division or rank, or both
## Satyrium example
### Results w/o narrowing
get_tps("Satyrium")
### w/ rank
get_tps("Satyrium", rank = "var.")
get_tps("Satyrium", rank = "sp.")

## w/ family
get_tps("Poa")
get_tps("Poa", family = "Iridaceae")
get_tps("Poa", family = "Orchidaceae")
get_tps("Poa", family = "Orchidaceae", rank = "gen.")

# Fuzzy filter on any filtering fields
## uses grep on the inside
get_tps("Poa", family = "orchidaceae")
get_tps("Aga", fuzzy = TRUE, parent = "*idae")

# pass to classification function to get a taxonomic hierarchy
classification(get_tps(sci='Poa annua'))

# Convert a tps without class information to a tps class
as_tps(get_tps("Pinus contorta")) # already a tps, returns the same
as_tps(get_tps(c("Chironomus riparius","Pinus contorta"))) # same
as_tps(24900183) # numeric
as_tps(c(24900183,50150089,50079838)) # numeric vector, length > 1
as_tps("24900183") # character
as_tps(c("24900183","50150089","50079838")) # character vector, length > 1
as_tps(list("24900183","50150089","50079838")) # list, either numeric or character
## dont check, much faster
as_tps("24900183", check=FALSE)
as_tps(24900183, check=FALSE)
as_tps(c("24900183","50150089","50079838"), check=FALSE)
as_tps(list("24900183","50150089","50079838"), check=FALSE)

(out <- as_tps(c(24900183,50150089,50079838)))
data.frame(out)
as_tps( data.frame(out) )

# Get all data back
get_tps_("Poa annua")
get_tps_("Poa annua", rows=2)
get_tps_("Poa annua", rows=1:2)
get_tps_(c("asdfadfasd","Pinus contorta"), rows=1:5)

# use curl options
invisible(get_tps("Quercus douglasii", messages = TRUE))
}
}
\seealso{
\code{\link[=classification]{classification()}}

Other taxonomic-ids: 
\code{\link{get_bold}()},
\code{\link{get_eol}()},
\code{\link{get_gbif}()},
\code{\link{get_ids}()},
\code{\link{get_itis}()},
\code{\link{get_iucn}()},
\code{\link{get_natserv}()},
\code{\link{get_nbn}()},
\code{\link{get_ncbi}()},
\code{\link{get_pow}()},
\code{\link{get_tol}()},
\code{\link{get_wiki}()},
\code{\link{get_worms}()},
\code{\link{id-accessors}}
}
\author{
Scott Chamberlain
}
\concept{taxonomic-ids}
