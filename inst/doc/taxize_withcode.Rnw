\documentclass[letterpaper,superscriptaddress,showkeys,longbibliography,10pt]{revtex4-1}

\usepackage[utf8]{inputenc}
\usepackage{color,dcolumn,graphicx,hyperref}
\usepackage{natbib}
\usepackage{footnote}
\hypersetup
{
  colorlinks = true, linkcolor = blue, citecolor = blue, urlcolor = blue,
}

\begin{document}

<<setup, include=FALSE, cache=FALSE>>=
## set global chunk options
opts_chunk$set(fig.path='figure/', fig.align='center', fig.show='hold', par=TRUE, warning=FALSE, message=FALSE, error=FALSE, comment=NA)
@

\title{taxize - taxonomic search and retrieval in R}

\author{Scott Chamberlain}
\email[E-mail: ]{myrmecocystus@gmail.com}
\affiliation{Biology Department, Simon Fraser University, Canada.}

\author{Eduard Sz\"{o}cs}
\email[E-mail: ]{szoe8822@uni-landau.de}
\affiliation{Institute for Environmental Sciences, University Koblenz-Landau, Forststra√üe 7, 76829 Landau, Germany}
\keywords{taxonomy; R; software; data; API}

\maketitle

\section{Abstract}

All species are hierarchically related to one another, and we use taxonomic names to label the nodes in this hierarchy. Taxonomic data is becoming easily available on the web, but scientists need a way to access taxonomic data on the web in a programmatic fashion, which is fast and reproducible. We have developed taxize, an open-source software package (freely available from \url{http://cran.r-project.org/web/packages/taxize/index.html}) for the R language. taxize provides a simple, programmatic access to taxonomic data for 13 data sources around the web. We discuss the need for a taxonomic toolbelt in R, and outline a suite of use cases for which taxize is ideally suited (including a full workflow as an appendix). The taxize package will facilitate open and reproducible science by allowing taxonomic data collection to be done in the open-source R platform.

\section{Introduction}

Evolution by natural selection has led to a hierarchical relationship among all living organisms.  Thus, species are categorized using a taxonomic hierarchy, starting with the binomial species name (e.g, \emph{Homo sapiens}), moving up to genus (\emph{Homo}), then family (\emph{Hominidae}), and on up to Domain (\emph{Eukarya}). Biologists, whether studying organisms at the cell, organismal, or community level, can put their study taxa into taxonomic context, allowing them to know close and distant relatives, find relevant literature, and more. Discovering the correct taxonomic names is, unfortunately, not straightforward. Taxonomic names often change due to name changes at the generic or specific levels, lumping or splitting lower taxa (genera, species) among higher taxa (families), and name spelling changes. In addition, there is no one authoritative taxonomic names source. Instead, there are essentially competing sources (e.g., uBio, Tropicos, ITIS) that may have different accepted names for the same taxon. The goal of taxize, an R package in development, is to make all use cases having to do with taxonomy easy and replicable. 

Taxonomic data is getting easier to obtain through web interfaces (e.g., \url{http://eol.org/}). However, there are a number of good reasons to obtain taxonomic information programatically rather than through a web interface. First, if you have more than a few names to lookup on a website, it can take quite a long time to enter each name, get data, and repeat for each species. Second, programatically getting taxonomic names solves the first problem by looping over a list of names, and is reproducible. With increasing reports of irreproducibility in science \cite{stodden2010,zimmer2012}, it is extremely important to make science workflows repeatable. 

The R language is the dominant language used by biologists (reference), and now has over 4,000 packages on the main repository (CRAN) and more than 2,500 packages on other repositories to extend R. R is great for manipulating, visualizing and fitting statistical models to data. However, the key missing piece in R is the ability to get data within R. Increasingly, data is available from the web via API's, or application programming interfaces. These are bits of code that allow computers to talk to one another. Web APIs define a number of methods that allow users to search for a species name, or retrieve the synonyms for a species name, for example. One can then write functions in any programming language to interact with the API, allowing users to interact with the web API without having to know the details of the code. In taxize, we have written a suite of R functions that interact with many taxonomic data sources via their web APIs (Table~\ref{tab:a}). The interface to each function is usually a simple list of species names, just as user would do with a web API.

\section{Why taxize?}

There are a large suite of applications developed around the problem of searching for, resolving, and getting higher taxonomy for species names. For example, Linnaeus \url{http://linnaeus.sourceforge.net/} provides ability to search for taxonomic names in documents and normalize names. In addition, there are many web interfaces to search for and normalize names such as Encyclopedia of Life's Global Names Resolver \url{http://resolver.globalnames.org/}, uBio tools \url{http://www.ubio.org/index.php?pagename=sample_tools}, and iPlant's Taxonomic Name Resolution Service \url{http://tnrs.iplantcollaborative.org/}. 

All of these tools provide great ways to search for taxonomic names and resolve them in some cases. However, scientists ideally need a tool that can be used programmatically, and thus be made reproducible, and highly customizeable. The goal of taxize is to make it easy to create reproducible and easy to use workflows for searching for taxonomic names, resolving them, getting higher taxonomic names, and other tasks related to research dealing with species. 

\section{Data sources}

taxize uses many data sources (Table~\ref{tab:a}), and more can easily be added. There are two common tasks provided by the data sources: name search and name resolution. Other functionality in taxize includes retrieving a classification tree for a species, or retrieving child taxa of a focal taxon. One of the data sources (Phylomat) returns phylogenies, while another (NCBI) returns genetic sequence data. However, there are other R packages that are focused solely on sequence data, such as rsnps \cite{chamberlain2013}, rentrez \cite{winter2013}, BoSSA \cite{lefeuvre2010}, and ape \cite{paradis2004}. 

Some of the data sources taxize interacts with require authentication. That is, in addition to the search terms you provide (e.g., \emph{Homo sapiens}), they require an alphanumeric identification key so that they can better manage their data. The services that do require an API key are: Encyclopedia of Life (EOL), the Universal Biological Indexer and Organizer (uBio), Tropicos, and Plantminer. You can easily obtain an API key by visiting the website of each service (see (Table~\ref{tab:a}) for links to each site). 

\begin{table}[!ht]
\caption{Data sources used in taxize, tasks available, and links to them}\label{tab:a} % title of Table
\begin{tabular}{|l|cccc|l|}
\hline
Source name & Name search & Name resolution & Phylogeny & Sequences & URL  \\
\hline
Encyclopedia of Life & Yes & See GNR below & No & No & \url{http://eol.org/} \\
Integrated Taxonomic Information System & Yes & Synonyms & No & No & \url{http://www.itis.gov/} \\
iPlant Taxonomic Name Resolution Service & Yes & Yes & No & No & \url{http://bit.ly/16dHkBy} \\
Phylomatic & No & No & Yes & No & \url{ http://bit.ly/P0pjMz} \\
uBio & Yes & Yes & No & No & \url{http://www.ubio.org/} \\
Global Names Resolver & Yes & Yes & No & No & \url{http://bit.ly/11R3Pbr} \\
Global Names Index & Yes & No & No & No & \url{http://bit.ly/11R3RQB} \\
IUCN Red List & Yes & No & No & No & \url{http://bit.ly/11R3RQC} \\
Tropicos & Yes & Yes & No & No & \url{http://www.tropicos.org/} \\
Plantminer & Yes & No & No & No & \url{http://www.plantminer.com/} \\
The Plant List & Yes & Yes & No & No & \url{http://www.theplantlist.org/} \\
Catalogue of Life & Yes & Yes & No & No & \url{http://bit.ly/11R3S75} \\
National Center for Biotechnology Information & Yes & X & Yes \footnote{Web only, no API, see \url{http://1.usa.gov/11R446a}} & Yes & \url{http://www.ncbi.nlm.nih.gov/} \\
\hline
\end{tabular}
\end{table}

\section{Use cases}

There are a variety of use cases for which taxize is ideally suited, and few side cases in which taxize can be useful. We discuss five ideal use cases for taxize at length, and highlight the side cases in brief.

\subsection{Installing taxize}

First, let's install taxize. There are two versions of taxize, a stable release that can be installed from the R package repository, CRAN, and from GitHub, where the code is developed. 

Installing from CRAN or GitHub

<<installtaxize, eval=FALSE>>=
## From CRAN
install.packages("taxize")

## From GitHub
install.packages("devtools")
require(devtools)
install_github("taxize_", "ropensci")
@

Loading into your R session

<<loadtaxize, eval=TRUE>>=
library(taxize)
@


\subsection{Resolve taxonomic names}

This is a common task in biology. We often have a list of species names and we want to know if a) we have the most up to date names, b) our names are spelled correctly, and c) if we have common names, we likely need the scientific names. One way to resolve names is via the Global Names Resolver service provided by the Encyclopedia of Life (\url{http://resolver.globalnames.org/}).

<<resolvenames, eval=TRUE>>=
# Here, we are searching for two misspelled names
temp <- gnr_resolve(names = c("Helianthos annus", "Homo saapiens"), returndf = TRUE)

# let's take a peek at the data, excluding the data source ID and score columns
temp[,-c(1,4)]
@

Looks like the correct spellings are \emph{Helianthus annuus} and \emph{Homo sapiens}, cool!

Another approach is using the Taxonomic Name Resolution Service via the Taxosaurus API (\url{http://taxosaurus.org/}).

<<tnrs, eval=TRUE>>=
# Lets set our list of species names
mynames <- c("Helianthus annuus", "Pinus contort", "Poa anua", "Abis magnifica",
		"Rosa california", "Festuca arundinace", "Sorbus occidentalos","Madia sateva")

# And we'll call the API with the tnrs function
tnrs(query = mynames)[,-c(5:7)]
@

It looks like there are a few corrections: e.g., \emph{Madia sateva} should be \emph{Madia sativa}, and \emph{Rosa california} should be \emph{Rosa californica}.

\subsection{Retrieve higher taxonomic names}

Another task biologists often face is wanting to get higher taxonomic names for their list of taxa. If you have the higher taxonomy you can put in to context the relationships of your list (i.e., Species A and B are in Family X), as opposed to not knowing that Species A and B are closely related. This also makes it easy to aggregate/standardize data to a specific taxonomic level (eg. family level) or to match data to other databases with different taxonomic resolution (eg. trait-data).

Two data sources provide this type of capability: ITIS and NCBI. The principle in both is the same - first you need to get an identifier for the queried species and then can retrieve additional information with this ID. 


<<itisclass, eval=TRUE>>=
specieslist <- c("Abies procera","Pinus contorta")
classification(get_tsn(specieslist, "sciname"))
@

It turns out both species are in the family Pinaceae. You can also get this type of information from the NCBI by doing \emph{classification(get\_uid(specieslist))}.

Instead of a full classification, you may only want a single name, say a family name for your species of interest. The function \emph{tax\_name} is built just for this purpose. And you can specify the data source you retrieve the taxonomic name from with the \emph{db} parameter. 

<<taxname, eval=TRUE>>=
tax_name(query="Helianthus annuus", get="family", db="itis")
tax_name(query="Helianthus annuus", get="family", db="ncbi")
@


\subsection{Retrieve a phylogeny}

There is an increasingly common use case: many biologists are not adequately trained in reconstructing phylogenies. However, so-called \emph{taxonomic phylogenies} can be constructed from simply knowing the higher taxonomic classification of a set of taxa. There are few taxon groups for which we can get phylogenies simply based on taxonomy; one of these is for angiosperms, called Phylomatic \cite{webb2005}. We have created a workflow in taxize that lets you input a simple species list, and then taxize does work behind the scenes to get higher taxonomic names, which are required by Phylomatic to get a phylogeny. Here is a short example. 

<<phylomaticphylogeny, eval=TRUE, dev='png', out.width='4in', out.height='4in', dpi=100>>=
# input the taxonomic names
taxa <- c("Poa annua", "Abies procera", "Helianthus annuus")

# fetch the tree - the formatting of names and higher taxonmy is done within the function
tree <- phylomatic_tree(taxa=taxa, get = 'POST', informat='newick', method = "phylomatic", storedtree = "R20120829", taxaformat = "slashpath", outformat = "newick", clean = "true")

tree$tip.label <- capwords(tree$tip.label)

# plot the tree
plot(tree, cex=1)
@

\subsection{What taxa are in children of my taxon of interest?}

If you aren't a taxonomic specialist on a particular taxon you likely don't know what children taxa are within a family, or within a genus. You can of course go to a website like Wikispecies (\url{http://species.wikimedia.org/wiki/Main_Page}) or Encyclopedia of Life (\url{http://eol.org/}). taxize provides an easy way for you to search for downstream taxa, both for the Catalogue of Life (CoL; \url{http://www.catalogueoflife.org/}) and the Integrated Taxonomic Information Database (\url{http://www.itis.gov/}). Here is a short example using the CoL in which we want to find all the species within the genus \emph{Apis} (honey bees).

<<downstream, eval=TRUE>>=
col_downstream(name="Apis", downto="Species")[[1]]
@

\subsection{IUCN Status}

There are a number of things we can do once we have the correct taxonomic names. One thing we can do is ask about the conservation status of a species. We have provided a set of functions, \emph{iucn\_summary} and \emph{iucn\_status}, to search for species names, and extract the status information, respectively. Here, we search for the Panther and Lynx.  

<<XXXX, eval=TRUE>>=
ia <- iucn_summary(c("Panthera uncia", "Lynx lynx"))
iucn_status(ia)
@

It turns out that the Panther is endangered (EN) and the Lynx is of least concern (LN). 

\section{Conclusion}

some text here

\section{Funding}

SAC is supported by CANPOLIN of Canada.

\section{Acknowledgements}

The taxize package is part of the rOpenSci project \url{http://ropensci.org/}.

\section{Appendices}

\begin{itemize}
    \item{Appendix A.} A complete reproducible workflow, from a species list to a phylogeny. 
\end{itemize}

\bibliography{refs}

\end{document}